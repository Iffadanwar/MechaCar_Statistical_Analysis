# Part I
students <- c("Abraham","Beatrice","Cory" ,"Dinah","Eric" ,"Felicia")
roll_call <- function(class){
print(Sys.Date())
# Create a for loop
for (i in 1:6) {
print(students[i])
}
}
?sample_n()
library(jsonlite)
library(tidyverse)
library(ggplot2)
?sample_n()
population_table <- read.csv("used_car_data.csv", check.names = F, stringsAsFactors = F)
plt <- ggplot(population_table, aes(x=log10(Miles_Driven)))
plt + geom_density()
population_table <- read.csv("used_car_data.csv", check.names = F, stringsAsFactors = F)
setwd("C:/Users/19364/Desktop/Rice_Uni_notes/Unit-15-r")
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
plt <- ggplot(population_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table, aes(x=log10(Miles_Driven)))
plt + geom_density()
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table, aes(x=log10(Miles_Driven)))
plt + geom_density()
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table, aes(x=log10(Miles_Driven)))
plt + geom_density()
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table, aes(x=log10(Miles_Driven)))
plt + geom_density()
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table, aes(x=log10(Miles_Driven)))
plt + geom_density()
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table, aes(x=log10(Miles_Driven)))
plt + geom_density()
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table, aes(x=log10(Miles_Driven)))
plt + geom_density()
?t.test()
t.test(log10(sample_table$Miles_Driven), mu=mean(log10(population_table$Miles_Driven)))
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table, aes(x=log10(Miles_Driven)))
plt + geom_density()
t.test(log10(sample_table$Miles_Driven), mu=mean(log10(population_table$Miles_Driven)))
sample_table1 <- population_table %>% sample_n(50)
sample_table2 <- population_table %>% sample_n(50)
sample_table1 <- population_table %>% sample_n(50)
sample_table2 <- population_table %>% sample_n(50)
t.test(log10(population_table$Miles_Driven), log10(population_table$Miles_Driven))
t.test(log10(sample_table1$Miles_Driven), log10(sample_table2$Miles_Driven))
>t.test()
?t.test()
mpg_data <- read.csv("mpg_modified.csv")
mpg_data <- read.csv("mpg_modified.csv")
mpg_1999 <- mpg_data %>% filter(year==1999)
mpg_2008 <- mpg_data %>% filter(year==2008)
View(mpg_2008)
View(mpg_1999)
t.test(mpg_1999$hwy, ,mpg_2008$hwy, paired = T)
t.test(mpg_1999$hwy,mpg_2008$hwy,paired = T)
?aov()
mtcars_filt <- mtcars[,c("hp", "cyl")]
mtcars_filt$cyl <- factor(mtcars_filt$cyl)
aov(hp ~ cyl, data = mtcars_filt)
summary(aov(hp ~ cyl, data = mtcars_filt))
plt <- ggplot(mtcars, aes(x=hp,y=qsec))
plt + geom_point()
cor(mtcars$hp, mtcars$qsec)
used_cars <- read.csv('used_car_data.csv',stringsAsFactors = F)
head(used_cars)
plt <-ggplot(used_cars, aes(x=Miles_Driven, y=Selling_Price))
plt + geom_point()
cor(used_cars$Miles_Driven,used_cars$Selling_Price)
used_matrix <- as.matrix(used_cars[,c("Selling_Price","Present_Price","Miles_Driven")])
cor(used_matrix)
?lm()
lm(qsec ~ hp, mtcars)
summary(lm(qsec ~ hp, mtcars))
model <- lm(qsec ~ hp,mtcars) #create linear model
yvals <- model$coefficients['hp']*mtcars$hp +
model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals), color = "red")
lm(qsec ~ mpg + disp +dart + wt + hp, data = mtcars)
lm(qsec ~ mpg + disp + dart + wt + hp, data = mtcars)
lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars)
summary(lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars))
table(mpg$class,mpg$year) #generate contingency table
chisq.test(tbl)
tbl <- table(mpg$class,mpg$year) #generate contingency table
chisq.test(tbl)
setwd("C:/Users/19364/Desktop/Rice_Uni_notes/Unit-15-r/MechaCar_Statistical_Analysis")
library(dplyr)
library(dplyr)
MechaCar_mpg <- read.csv(MechaCar_mpg.csv)
MechaCar_mpg <- read.csv("MechaCar_mpg.csv")
View(MechaCar_mpg)
print.head(MechaCar_mpg)
head(MechaCar_mpg)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = MechaCar_mpg)
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = MechaCar_mpg))
MechaCar_mpg <- read.csv("MechaCar_mpg.csv",check.names=F,stringsAsFactors = F)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = MechaCar_mpg)
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = MechaCar_mpg))
library(dplyr)
###### Deliverable 1 ######
#import csv file
MechaCar_mpg <- read.csv("MechaCar_mpg.csv",check.names=F,stringsAsFactors = F)
#generate multiple linear regression model
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = MechaCar_mpg)
#summary statistics
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = MechaCar_mpg))
lm(mpg ~ vehicle_length + ground_clearance, data = MechaCar_mpg)
summary(lm(mpg ~ vehicle_length + ground_clearance, data = MechaCar_mpg))
MechaCar_mpg <- read.csv("resources/MechaCar_mpg.csv",check.names=F,stringsAsFactors = F)
View(MechaCar_mpg)
library(dplyr)
###### Deliverable 1 ######
#import csv file
MechaCar_mpg <- read.csv("resources/MechaCar_mpg.csv",check.names=F,stringsAsFactors = F)
#generate multiple linear regression model
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = MechaCar_mpg)
#summary statistics
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = MechaCar_mpg))
#Additional Step: eliminate the independent variables that have little impact on predicting mpg to see impact:
lm(mpg ~ vehicle_length + ground_clearance, data = MechaCar_mpg)
summary(lm(mpg ~ vehicle_length + ground_clearance, data = MechaCar_mpg))
Suspension_Coil <- read.csv("resources/Suspension_Coil",check.names=F,stringsAsFactors = F)
Suspension_Coil <- read.csv("resources/Suspension_Coil.csv",check.names=F,stringsAsFactors = F)
View(Suspension_Coil)
total_summary <- summarize(Suspension_Coil)
View(total_summary)
View(total_summary)
View(Suspension_Coil)
total_summary <- Suspension_Coil %>% summarize(
mean_PSI= mean(PSI),
median_PSI = median(PSI),
variance_PSI = var(PSI),
std_dev_PSI = sd(PSI),
Num_coil = n(), .groups = "keep")
View(total_summary)
head.Suspension_Coil
lot_summary <- Suspension_Coil %>% group_by(Manufacturing_Lot) %>% summarize(
mean_PSI= mean(PSI),
median_PSI = median(PSI),
variance_PSI = var(PSI),
std_dev_PSI = sd(PSI),
Num_coil = n(), .groups = "keep")
View(lot_summary)
plt1 <- ggplot(Suspension_Coil,aes(x=Manufacturing_Lot,y=PSI))
plt1 <- geom_boxplot()
View(plt1)
plt1 <- ggplot(Suspension_Coil,aes(x=Manufacturing_Lot,y=PSI))
plt1 + geom_boxplot()
t.test(Suspension_Coil$PSI, mu=1500)
lot1 <- subset(Suspension_Coil, Manufacturing_lot=="Lot1")
lot2 <- subset(Suspension_Coil, Manufacturing_lot=="Lot2")
lot3 <- subset(Suspension_Coil, Manufacturing_lot=="Lot3")
lot1 <- subset(Suspension_Coil, Manufacturing_Lot=="Lot1")
lot2 <- subset(Suspension_Coil, Manufacturing_Lot=="Lot2")
lot3 <- subset(Suspension_Coil, Manufacturing_Lot=="Lot3")
View(lot1)
t.test(lot1$PSI, mu=1500)
t.test(lot2$PSI, mu=1500)
t.test(lot3$PSI, mu=1500)
